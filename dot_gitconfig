[includeIf "gitdir:/Users/joshika39/uni/"]
	path = ~/.gitconfig.uni
[includeIf "gitdir:/Users/joshika39/work/"]
  path = ~/.gitconfig.work

[push]
	default = tracking
[core]
  ignorecase = false
	excludesfile = ~/.gitignore
	trustctime = false
    autocrlf = false
    safecrlf = false
[user]
  email = josh.hegedus@outlook.com
	name = Joshua Hegedus
	signingkey = /Users/joshika39/.ssh/id_ecdsa_sk_git.pub
[merge]
	tool = kdiff3
	conflictstyle = diff3
[mergetool "vscode"]
    cmd = code --wait $MERGED

[color]
	ui = true
[alias]
	rls = !git checkout -f master && git pull upstream master && git checkout release && git reset --hard upstream/release && git merge master --no-edit && git push upstream release && git checkout master
	tagrls = !tag_rls
	rb = !git fetch upstream && git rebase --autosquash --interactive upstream/master
	fu = !sh -c 'REV=$(git rev-parse $1) && git commit -a --fixup $@ && GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash $REV^' -
	fa = !git fetch --all
	btm  = !git fetch upstream && git checkout -f master && git reset --hard upstream/master
	mm = "!f() { \
		git fetch upstream; \
		git merge --no-edit -s recursive -X renormalize upstream/master; \
	}; f"
	qb = "!f() { \
		git stash; \
		git btm; \
		git checkout -b $1; \
		git reset --hard upstream/master; \
		git stash pop; \
		git add -A; \
		git commit -a -m \"$2\"; \
		git push --set-upstream origin $1; \
		hub pull-request; \
	}; f"
	qc = "!f() { \
		git checkout -b $1; \
		git reset --hard upstream/master; \
		git cherry-pick $2; \
		git push --set-upstream origin $1; \
		hub pull-request; \
	}; f"
	c  = !git commit -a -m
	undo = !git reset --soft HEAD^
	cleanup = "!f() { \
    REMOTE=\"${REMOTE:-upstream}\"; \
    DEFAULT_BRANCH=$(git remote show \"$REMOTE\" | awk '/HEAD branch/ { print $NF }'); \
    echo \"ðŸ”„ Using remote: $REMOTE (branch: $DEFAULT_BRANCH)\"; \
    git fetch \"$REMOTE\"; \
    git checkout \"$DEFAULT_BRANCH\"; \
    git pull \"$REMOTE\" \"$DEFAULT_BRANCH\"; \
    git push \"$REMOTE\" \"$DEFAULT_BRANCH\"; \
    git branch -r --merged | grep -v \"$DEFAULT_BRANCH\" | grep \"$REMOTE/\" | sed \"s|$REMOTE/||\" | xargs -r -n 1 git push --delete \"$REMOTE\"; \
    git branch --merged | grep -v \"$DEFAULT_BRANCH\" | xargs -r -n 1 git branch -d; \
    git branch -vv | grep ': gone]' | grep -v '\\*' | awk '{ print $1; }' | xargs -r git branch -D; \
    git fetch --all --prune; \
    git prune; \
    git gc --aggressive; \
  }; f"
  cleanup-local = "!f() { \
    git checkout master && \
    git pull && \
    git branch --merged | grep -v master | xargs -r git branch -d && \
    git branch -vv | grep ': gone]' | grep -v '\\*' | awk '{ print $1; }' | xargs -r git branch -D && \
    git fetch --prune && \
    git prune && \
    git gc --aggressive; \
  }; f"
[hub]
	protocol = https
[submodule]
	recurse = true
[mergetool]
	prompt = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = true
	ff = only
[rebase]
  autoStash = true
[gpg]
	format = ssh
[commit]
	gpgsign = true
[gpg "ssh"]
	program = /opt/homebrew/bin/ssh-keygen
